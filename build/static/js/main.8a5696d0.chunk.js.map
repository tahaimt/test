{"version":3,"sources":["drawer/Header.js","components/button/index.js","components/primeItem/index.js","pages/Prime.js","store/actions/prime/index.js","store/actions/prime/types.js","store/actions/index.js","routes/index.js","App.js","serviceWorker.js","store/reducers/prime/model.js","store/index.js","store/reducers/prime/index.js","index.js"],"names":["Header","classes","this","props","AppBar","color","className","appBar","Toolbar","Grid","container","spacing","alignItems","item","xs","flex","inline","Typography","variant","noWrap","to","link","tagline","Component","withRouter","withStyles","theme","position","boxShadow","borderBottom","palette","grey","backgroundColor","display","breakpoints","down","justifyContent","textDecoration","marginLeft","up","paddingTop","PrimeButton","Fragment","CssBaseline","wrapper","Button","onClick","style","disabled","loading","label","CircularProgress","size","buttonProgress","button","margin","green","top","left","marginTop","PrimeItem","Chip","number","customTheme","createMuiTheme","primary","secondary","red","Prime","handleOnSubmit","event","getPrimeNumbers","state","handleOnClear","setState","reset","handleChangeAmount","value","handleChangePeriod","handleChangeStart","bind","handleOnChangeLazy","updateNumberDebounced","_","debounce","e","target","persist","currentPath","location","pathname","root","justify","grid","md","sm","Paper","paper","blockCenter","TextField","type","inputProps","textAlign","textField","onChange","onKeyPress","key","isLoading","error","errorMessage","elevation","severity","response","length","responseHeader","request","map","prime","connect","dispatch","fetch","then","resp","json","catch","console","errorHandler","message","marginRight","width","flexGrow","overflow","backgroundSize","backgroundPosition","paddingBottom","padding","text","marginBottom","exact","path","component","typography","fontFamily","join","App","ThemeProvider","Boolean","window","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Model","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a5696d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\",\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey[\"100\"]}`,\n    backgroundColor: \"white\"\n  },\n  inline: {\n    display: \"inline\"\n  },\n  flex: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    }\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  },\n  tagline: {\n    display: \"inline-block\",\n    marginLeft: 10,\n    [theme.breakpoints.up(\"md\")]: {\n      paddingTop: \"0.8em\"\n    }\n  }\n});\n\nclass Header extends Component {\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <AppBar color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <Grid container spacing={6} alignItems=\"baseline\">\n            <Grid item xs={12} className={classes.flex}>\n              <div className={classes.inline}>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                  <Link to=\"/\" className={classes.link}>\n                    <span className={classes.tagline}>Prime Number App</span>\n                  </Link>\n                </Typography>\n              </div>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Header));\n","import React,  { Component } from 'react';\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  }\r\n});\r\n\r\nclass PrimeButton extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <span className={classes.wrapper}>\r\n          <Button \r\n            onClick={this.props.onClick}\r\n            variant={this.props.variant}\r\n            color={this.props.color}\r\n            className={this.props.className}\r\n            style={this.props.style}\r\n            disabled={this.props.disabled || this.props.loading}\r\n          >\r\n            { this.props.label }\r\n          </Button>\r\n          {this.props.loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n        </span>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nPrimeButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  variant: PropTypes.string,\r\n  color: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  label: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(PrimeButton);\r\n","import React,  { Component } from 'react';\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n      margin: theme.spacing(0.5),\r\n      position: 'relative',\r\n    }\r\n});\r\n\r\nclass PrimeItem extends Component { \r\n    render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <span className={classes.wrapper}>\r\n          <Chip color=\"default\" label={this.props.number}></Chip>\r\n        </span>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nPrimeItem.propTypes = {\r\n  number: PropTypes.number\r\n};\r\n\r\nexport default withStyles(styles)(PrimeItem);","import _ from 'lodash';\nimport React,  { Component } from 'react';\nimport { connect } from 'react-redux';\nimport withStyles from '@material-ui/styles/withStyles';\nimport { withRouter } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Header from '../drawer/Header';\nimport CustomButton from '../components/button';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Typography from \"@material-ui/core/Typography\";\nimport PrimeItem from '../components/primeItem';\n\nimport { getPrimeNumbers, reset } from '../store/actions/prime';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { red, green } from '@material-ui/core/colors';\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: green,\n    secondary: red\n  }\n});\n\nconst styles = theme => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['100'],\n    overflow: 'hidden',\n    backgroundSize: 'cover',\n    backgroundPosition: '0 400px',\n    paddingBottom: 50,\n    paddingTop: 50\n  },\n  grid: {\n    width: 1200,\n    margin: `0 ${theme.spacing(2)}px`,\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(100% - 20px)'\n    }\n  },\n  paper: {\n    padding: theme.spacing(3),\n    margin: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  blockCenter: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  },\n  button: {\n    margin: theme.spacing(0.5)\n  },\n  responseHeader: {\n    marginBottom: theme.spacing(3)\n  }\n});\n\nclass Prime extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      number: 0\n    };\n    this.handleOnSubmit = this.handleOnSubmit.bind(this)\n    this.handleOnClear = this.handleOnClear.bind(this)\n    this.handleOnChangeLazy = this.handleOnChangeLazy.bind(this)\n  }\n  \n\n  componentWillMount () {\n\n    // This is done to improve the performance if a lot of components are loaded (for instance, try with a number over 10000)\n    this.updateNumberDebounced = _.debounce(function (e) {\n      this.setState({number: e.target.value});\n    }, 200);\n  }\n\n  handleOnChangeLazy (e) {\n    e.persist();\n    this.updateNumberDebounced(e);\n  }\n\n  handleOnSubmit = event => {\n    this.props.getPrimeNumbers(this.state.number);\n  }\n\n  handleOnClear = event => {\n    this.setState({\n      number: 0\n    })\n    this.props.reset();\n  }\n\n  componentDidMount() {\n  }\n\n  handleChangeAmount = (event, value) => {\n  }\n\n  handleChangePeriod = (event, value) => {\n  }\n\n  handleChangeStart = (event, value) => {\n  }\n\n  render() {\n    const { classes } = this.props;\n    const currentPath = this.props.location.pathname;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Header currentPath={currentPath} />\n        \n        <MuiThemeProvider theme={customTheme}>\n          <div className={classes.root}>\n            <Grid container justify=\"center\" >\n              <Grid alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n                <Grid item xs={12} md={12} sm={12}>\n                  <Paper className={classes.paper}>\n                    <div className={classes.blockCenter}>\n                      <TextField\n                        type=\"number\"\n                        label=\"Prime Numbers until\"\n                        inputProps={{style: { textAlign: 'right' }}}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        onChange={this.handleOnChangeLazy}\n                        onKeyPress={(event) => { \n                          if (event.key === 'Enter') {\n                            this.handleOnSubmit(event);\n                          }}\n                        }\n                      />\n                    </div>\n                    <div className={classes.blockCenter}>\n                      <CustomButton \n                        variant=\"contained\" \n                        color=\"default\" \n                        className={classes.button} \n                        onClick={this.handleOnClear} \n                        label=\"Clear\"\n                        disabled={this.props.isLoading}\n                      />\n                      <CustomButton \n                        variant=\"contained\" \n                        color={this.props.error ? 'secondary': 'primary'} \n                        className={classes.button} \n                        onClick={this.handleOnSubmit} \n                        label=\"Request\"\n                        loading={this.props.isLoading}\n                        disabled={!this.state.number}\n                      />\n                    </div>\n                    {\n                      this.props.error ?\n                        !this.props.errorMessage ?\n                        <>\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"warning\">An error occurred. Perhaps check if the Express api is running!</MuiAlert>\n                          <br />\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"info\">If Express api is not running, open another shell on the root directory and execute 'npm start'</MuiAlert>\n                        </> \n                        :\n                        <>\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"warning\">{ this.props.errorMessage }</MuiAlert>\n                          <br />\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"info\">If Express api is not running, open another shell on the root directory and execute 'npm start'</MuiAlert>\n                        </>\n                      :\n                      <>\n                      </>\n                    }\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n              {\n                !this.props.error && this.props.response && typeof this.props.response === 'object' && this.props.response.length > 0 ?\n                  <div>\n                    <Grid container justify=\"center\" className={classes.responseHeader}>\n                      <Typography variant=\"h3\" color=\"primary\" noWrap>Median of all prime numbers under { this.props.request }</Typography>\n                    </Grid>\n                      \n                    <Grid container justify=\"center\" >\n                      <br />\n                      {\n                        this.props.response.map(prime => <PrimeItem key={prime} number={prime} />)\n                      }\n                    </Grid>\n                  </div>\n                :\n                this.props.request && !this.props.isLoading && !this.props.error ? <>\n                  <Grid container justify=\"center\" className={classes.responseHeader}>\n                    <Typography variant=\"h3\" color=\"primary\" noWrap>There are no prime numbers under { this.props.request }</Typography>\n                  </Grid>\n                </> : \n                <></>\n              }\n        </MuiThemeProvider>\n      </React.Fragment>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    request: state.request,\n    response: state.response,\n    isLoading: state.isLoading,\n    error: state.error,\n    errorMessage: state.errorMessage\n  }\n}\n\nexport default connect(mapStateToProps, { getPrimeNumbers, reset })(withRouter(withStyles(styles)(Prime)));\n","import * as TYPES from './types';\r\nimport { errorHandler } from '../';\r\n\r\nexport function getPrimeNumbers(number){\r\n  return (dispatch) => {\r\n    dispatch({ type: TYPES.START_GET_PRIME_LT_NUMBER_REQUEST, request: number });\r\n    return fetch('http://localhost:8080/api/primes/median/get?number=' + number)\r\n    .then(resp => resp.json())\r\n    .then(response => { \r\n      if (!response || (response && response.errorMessage)) {\r\n        throw response.errorMessage\r\n      }\r\n      dispatch({ type: TYPES.GET_PRIME_LT_NUMBER, response }) \r\n    })\r\n    .catch(error => {\r\n      errorHandler(error);\r\n      dispatch({ type: TYPES.GET_PRIME_LT_NUMBER_ERROR, error: error.message || error });\r\n    });\r\n  }\r\n}\r\n\r\nexport function reset() {\r\n  return (dispatch) => {\r\n    dispatch({type: TYPES.CLEAR_PRIME_LT_NUMBER_RESPONSE})\r\n  }\r\n}","export const START_GET_PRIME_LT_NUMBER_REQUEST = 'START_GET_PRIME_LT_NUMBER_REQUEST';\r\nexport const GET_PRIME_LT_NUMBER = 'GET_PRIME_LT_NUMBER';\r\nexport const GET_PRIME_LT_NUMBER_ERROR = 'GET_PRIME_LT_NUMBER_ERROR';\r\nexport const CLEAR_PRIME_LT_NUMBER_RESPONSE = 'CLEAR_PRIME_LT_NUMBER_RESPONSE';","export function errorHandler (error) {\r\n    console.error(error);\r\n}","import React from \"react\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport Prime from \"../pages/Prime\";\r\n\r\nexport default props => (\r\n  <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Prime} />\r\n        {/* <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/wizard\" component={Wizard} /> */}\r\n      </Switch>\r\n  </HashRouter>\r\n);\r\n","import React, { Component } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\nimport Routes from './routes';\n\nconst theme = createMuiTheme({\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '\"Lato\"',\n      'sans-serif'\n    ].join(',')\n  }\n});\n\nclass App extends Component {\n  render() {\n    \n    return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <Routes />\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\r\n  request: null, \r\n  response: null, \r\n  isLoading: false, \r\n  error: false,\r\n  errorMessage: null\r\n}\r\n  ","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk'; \r\n\r\nimport reducer from './reducers/prime'; \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import Model from './model';\r\nimport * as TYPES from '../../actions/prime/types';\r\n\r\nexport default function reducer(state = Model, action){\r\n  switch(action.type){\r\n    case TYPES.GET_PRIME_LT_NUMBER:\r\n      return {...state, response: action.response, isLoading: false, error: false, errorMessage: null };\r\n    case TYPES.START_GET_PRIME_LT_NUMBER_REQUEST:\r\n      return {...state, request: action.request, response: [], isLoading: true, error: false, errorMessage: null };\r\n    case TYPES.GET_PRIME_LT_NUMBER_ERROR:\r\n      return {...state, error: true, errorMessage: action.error, isLoading: false, response: [] };\r\n    case TYPES.CLEAR_PRIME_LT_NUMBER_RESPONSE:\r\n      return {...state, request: null, response: [], error: false, errorMessage: null, isLoading: false };\r\n    default:\r\n      return {...state, isLoading: false, error: false, errorMessage: null };\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}