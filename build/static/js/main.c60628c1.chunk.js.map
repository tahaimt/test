{"version":3,"sources":["drawer/Header.js","components/button/index.js","components/primeItem/index.js","pages/Prime.js","store/actions/prime/index.js","store/actions/prime/types.js","store/actions/index.js","routes/index.js","App.js","serviceWorker.js","store/reducers/prime/model.js","store/index.js","store/reducers/prime/index.js","index.js"],"names":["Header","classes","this","props","AppBar","color","className","appBar","Toolbar","Grid","container","spacing","alignItems","item","xs","flex","inline","Typography","variant","noWrap","to","link","tagline","Component","withRouter","withStyles","theme","position","boxShadow","borderBottom","palette","grey","backgroundColor","display","breakpoints","down","justifyContent","textDecoration","marginLeft","up","paddingTop","PrimeButton","Fragment","CssBaseline","wrapper","Button","onClick","style","disabled","loading","label","CircularProgress","size","buttonProgress","button","margin","green","top","left","marginTop","PrimeItem","Chip","number","customTheme","createMuiTheme","primary","secondary","red","Prime","handleOnChange","event","setState","target","value","handleOnSubmit","getPrimeNumbers","state","handleOnClear","reset","currentPath","location","pathname","root","justify","grid","md","sm","Paper","paper","blockCenter","TextField","type","inputProps","textAlign","textField","onChange","onKeyPress","key","isLoading","error","errorMessage","elevation","severity","response","length","responseHeader","request","map","prime","connect","dispatch","fetch","then","resp","json","catch","console","errorHandler","message","marginRight","width","flexGrow","overflow","backgroundSize","backgroundPosition","paddingBottom","padding","text","marginBottom","exact","path","component","typography","fontFamily","join","App","ThemeProvider","Boolean","window","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Model","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c60628c1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport withStyles from \"@material-ui/styles/withStyles\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\nconst styles = theme => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    boxShadow: \"none\",\r\n    borderBottom: `1px solid ${theme.palette.grey[\"100\"]}`,\r\n    backgroundColor: \"white\"\r\n  },\r\n  inline: {\r\n    display: \"inline\"\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-evenly\",\r\n      alignItems: \"center\"\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\"\r\n  },\r\n  tagline: {\r\n    display: \"inline-block\",\r\n    marginLeft: 10,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingTop: \"0.8em\"\r\n    }\r\n  }\r\n});\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <AppBar color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Grid container spacing={6} alignItems=\"baseline\">\r\n            <Grid item xs={12} className={classes.flex}>\r\n              <div className={classes.inline}>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                  <Link to=\"/\" className={classes.link}>\r\n                    <span className={classes.tagline}>Prime Number App</span>\r\n                  </Link>\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Header));\r\n","import React,  { Component } from 'react';\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  }\r\n});\r\n\r\nexport class PrimeButton extends Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <span className={classes.wrapper}>\r\n          <Button \r\n            onClick={this.props.onClick}\r\n            variant={this.props.variant}\r\n            color={this.props.color}\r\n            className={this.props.className}\r\n            style={this.props.style}\r\n            disabled={this.props.disabled || this.props.loading}\r\n          >\r\n            { this.props.label }\r\n          </Button>\r\n          {this.props.loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n        </span>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nPrimeButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  variant: PropTypes.string,\r\n  color: PropTypes.string,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  label: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n};\r\n\r\nexport default withStyles(styles)(PrimeButton);\r\n","import React,  { Component } from 'react';\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = theme => ({\r\n    wrapper: {\r\n      margin: theme.spacing(0.5),\r\n      position: 'relative',\r\n    }\r\n});\r\n\r\nexport class PrimeItem extends Component { \r\n    render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <span className={classes.wrapper}>\r\n          <Chip color=\"default\" label={this.props.number}></Chip>\r\n        </span>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nPrimeItem.propTypes = {\r\n  number: PropTypes.number\r\n};\r\n\r\nexport default withStyles(styles)(PrimeItem);","import React,  { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport withStyles from '@material-ui/styles/withStyles';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Header from '../drawer/Header';\r\nimport CustomButton from '../components/button';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PrimeItem from '../components/primeItem';\r\n\r\nimport { getPrimeNumbers, reset } from '../store/actions/prime';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nconst customTheme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n    secondary: red\r\n  }\r\n});\r\n\r\nconst styles = theme => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.grey['100'],\r\n    overflow: 'hidden',\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: '0 400px',\r\n    paddingBottom: 50,\r\n    paddingTop: 50\r\n  },\r\n  grid: {\r\n    width: 1200,\r\n    margin: `0 ${theme.spacing(2)}px`,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'calc(100% - 20px)'\r\n    }\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    margin: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary\r\n  },\r\n  blockCenter: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center'\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  responseHeader: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass Prime extends Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      number: 0\r\n    };\r\n  }\r\n\r\n  handleOnChange = (event) => {\r\n    this.setState({number: event.target.value});\r\n  }\r\n\r\n  handleOnSubmit = () => {\r\n    this.props.getPrimeNumbers(this.state.number);\r\n  }\r\n\r\n  handleOnClear = () => {\r\n    this.setState({\r\n      number: 0\r\n    })\r\n    this.props.reset();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const currentPath = this.props.location.pathname;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Header currentPath={currentPath} />\r\n        \r\n        <MuiThemeProvider theme={customTheme}>\r\n          <div className={classes.root}>\r\n            <Grid container justify=\"center\" >\r\n              <Grid alignItems=\"center\" justify=\"center\" container className={classes.grid}>\r\n                <Grid item xs={12} md={12} sm={12}>\r\n                  <Paper className={classes.paper}>\r\n                    <div className={classes.blockCenter}>\r\n                      <TextField\r\n                        type=\"number\"\r\n                        label=\"Prime Numbers until\"\r\n                        inputProps={{style: { textAlign: 'right' }}}\r\n                        className={classes.textField}\r\n                        margin=\"normal\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleOnChange}\r\n                        onKeyPress={(event) => { \r\n                          if (event.key === 'Enter') {\r\n                            this.handleOnSubmit(event);\r\n                          }}\r\n                        }\r\n                      />\r\n                    </div>\r\n                    <div className={classes.blockCenter}>\r\n                      <CustomButton \r\n                        variant=\"contained\" \r\n                        color=\"default\" \r\n                        className={classes.button} \r\n                        onClick={this.handleOnClear} \r\n                        label=\"Clear\"\r\n                        disabled={this.props.isLoading}\r\n                      />\r\n                      <CustomButton \r\n                        variant=\"contained\" \r\n                        color={this.props.error ? 'secondary': 'primary'} \r\n                        className={classes.button} \r\n                        onClick={this.handleOnSubmit} \r\n                        label=\"Request\"\r\n                        loading={this.props.isLoading}\r\n                        disabled={!this.state.number}\r\n                      />\r\n                    </div>\r\n                    {\r\n                      this.props.error ?\r\n                        !this.props.errorMessage ?\r\n                        <>\r\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"warning\">An error occurred. Perhaps check if the Express api is running!</MuiAlert>\r\n                          <br />\r\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"info\">If Express api is not running, open another shell on the root directory and execute 'npm start'</MuiAlert>\r\n                        </> \r\n                        :\r\n                        <>\r\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"warning\">{ this.props.errorMessage }</MuiAlert>\r\n                          <br />\r\n                          <MuiAlert elevation={3} variant=\"filled\" severity=\"info\">If Express api is not running, open another shell on the root directory and execute 'npm start'</MuiAlert>\r\n                        </>\r\n                      :\r\n                      <>\r\n                      </>\r\n                    }\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          {\r\n            !this.props.error && this.props.response && typeof this.props.response === 'object' && this.props.response.length > 0 ?\r\n              <div>\r\n                <Grid container justify=\"center\" className={classes.responseHeader}>\r\n                  <Typography variant=\"h3\" color=\"primary\" noWrap>Median of all prime numbers under { this.props.request }</Typography>\r\n                </Grid>\r\n                  \r\n                <Grid container justify=\"center\" >\r\n                  <br />\r\n                  {\r\n                    this.props.response.map(prime => <PrimeItem key={prime} number={prime} />)\r\n                  }\r\n                </Grid>\r\n              </div>\r\n            :\r\n            this.props.request && !this.props.isLoading && !this.props.error ? <>\r\n              <Grid container justify=\"center\" className={classes.responseHeader}>\r\n                <Typography variant=\"h3\" color=\"primary\" noWrap>There are no prime numbers under { this.props.request }</Typography>\r\n              </Grid>\r\n            </> : \r\n            <></>\r\n          }\r\n        </MuiThemeProvider>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    request: state.request,\r\n    response: state.response,\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n    errorMessage: state.errorMessage\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getPrimeNumbers, reset })(withRouter(withStyles(styles)(Prime)));\r\n","import * as TYPES from './types';\r\nimport { errorHandler } from '../';\r\n\r\nexport function getPrimeNumbers(number){\r\n  return (dispatch) => {\r\n    dispatch({ type: TYPES.START_GET_PRIME_LT_NUMBER_REQUEST, request: number });\r\n    return fetch('http://localhost:8080/api/primes/median/get?number=' + number)\r\n    .then(resp => resp.json())\r\n    .then(response => { \r\n      if (!response || (response && response.errorMessage)) {\r\n        throw response.errorMessage\r\n      }\r\n      dispatch({ type: TYPES.GET_PRIME_LT_NUMBER, response }) \r\n    })\r\n    .catch(error => {\r\n      errorHandler(error);\r\n      dispatch({ type: TYPES.GET_PRIME_LT_NUMBER_ERROR, error: error.message || error });\r\n    });\r\n  }\r\n}\r\n\r\nexport function reset() {\r\n  return (dispatch) => {\r\n    dispatch({type: TYPES.CLEAR_PRIME_LT_NUMBER_RESPONSE})\r\n  }\r\n}","export const START_GET_PRIME_LT_NUMBER_REQUEST = 'START_GET_PRIME_LT_NUMBER_REQUEST';\r\nexport const GET_PRIME_LT_NUMBER = 'GET_PRIME_LT_NUMBER';\r\nexport const GET_PRIME_LT_NUMBER_ERROR = 'GET_PRIME_LT_NUMBER_ERROR';\r\nexport const CLEAR_PRIME_LT_NUMBER_RESPONSE = 'CLEAR_PRIME_LT_NUMBER_RESPONSE';","export function errorHandler (error) {\r\n    console.error(error);\r\n}","import React from \"react\";\r\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\r\nimport Prime from \"../pages/Prime\";\r\n\r\nexport default props => (\r\n  <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Prime} />\r\n        {/* <Route exact path=\"/search\" component={Search} />\r\n        <Route exact path=\"/wizard\" component={Wizard} /> */}\r\n      </Switch>\r\n  </HashRouter>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Routes from './routes';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '\"Lato\"',\r\n      'sans-serif'\r\n    ].join(',')\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <ThemeProvider theme={theme}>\r\n          <Routes />\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n  request: null, \r\n  response: null, \r\n  isLoading: false, \r\n  error: false,\r\n  errorMessage: null\r\n}\r\n  ","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk'; \r\n\r\nimport reducer from './reducers/prime'; \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nlet store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import Model from './model';\r\nimport * as TYPES from '../../actions/prime/types';\r\n\r\nexport default function reducer(state = Model, action){\r\n  switch(action.type){\r\n    case TYPES.GET_PRIME_LT_NUMBER:\r\n      return {...state, response: action.response, isLoading: false, error: false, errorMessage: null };\r\n    case TYPES.START_GET_PRIME_LT_NUMBER_REQUEST:\r\n      return {...state, request: action.request, response: [], isLoading: true, error: false, errorMessage: null };\r\n    case TYPES.GET_PRIME_LT_NUMBER_ERROR:\r\n      return {...state, error: true, errorMessage: action.error, isLoading: false, response: [] };\r\n    case TYPES.CLEAR_PRIME_LT_NUMBER_RESPONSE:\r\n      return {...state, request: null, response: [], error: false, errorMessage: null, isLoading: false };\r\n    default:\r\n      return {...state, isLoading: false, error: false, errorMessage: null };\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}